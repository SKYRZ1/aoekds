#!/bin/bash
clear
export GREEN='\e[32m'
export RED='\033[0;31m'
export BGBLUE='\e[1;44m'
export ORANGE='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export BG='\E[44;1;39m'
export NC='\033[0;37m'
export WHITE='\033[0;37m'
export TRY="[${RED} * ${NC}]"
command_exists() {
command -v "$1" >/dev/null 2>&1
}
install_dependencies() {
if ! command_exists figlet; then
echo "Installing figlet..."
sudo apt-get update
sudo apt-get install -y figlet
fi
if ! command_exists lolcat; then
echo "Installing lolcat..."
sudo apt-get update
sudo apt-get install -y lolcat
fi
}
reboot() {
clear
echo -e "${GREEN}System will reboot in 3 seconds...${RESET}"
sleep 3
echo ""
echo -e "${RED}rebooting...${RESET}"
sudo reboot
}
restart_services() {
sudo systemctl restart hysteria
GREEN="\033[0;32m"
RED="\033[0;31m"
RESET="\033[0m"
sudo systemctl restart hysteria
if systemctl is-active hysteria >/dev/null; then
echo -e "volt udp hysteria server is ${GREEN}active${RESET}."
else
echo -e "volt udp hysteria server is ${RED}not active${RESET}."
fi
if systemctl is-enabled hysteria >/dev/null; then
echo -e "volt udp hysteria server is ${GREEN}enabled${RESET}."
else
echo -e "volt udp hysteria server is ${RED}not enabled${RESET}."
fi
read -n 1 -s -r -p "  Press any key to return ↩︎"
menu
}
new_auth() {
clear
if command_exists figlet && command_exists lolcat; then
figlet -k Vnz | lolcat && figlet -k Hysteria | lolcat
else
echo "Please install 'figlet' and 'lolcat' for better text formatting."
fi
echo -e "${RED}NOTE: You can only add new Auth Passwords to serve as accounts"
echo -e "${GREEN}    - Also, you can change Auth passwords @ '/etc/hysteria/config.json'"
echo -e "${ORANGE}    - OBFS is static, you can only change it @ '/etc/hysteria/config.json'"
echo ""
echo ""
echo -e "${CYAN}OBFS : $(cat /etc/volt/OBFS) ${RESET}"
echo ""
python3 /etc/volt/cfgupt.py
systemctl restart hysteria
read -n 1 -s -r -p "  Press any key to return ↩︎"
menu
}
list_auth() {
clear
BLUE='\033[1;34m'
NC='\033[0m' # No Color
json_file="/etc/hysteria/config.json"
if ! command -v jq &>/dev/null; then
echo "Error: jq is not installed. Please install it using your package manager."
exit 1
fi
passwords=$(jq -r '.auth.config[]' "$json_file")
if [[ -n "$passwords" ]]; then
if command_exists figlet && command_exists lolcat; then
figlet -k Vnz | lolcat && figlet -k Hysteria | lolcat
else
echo "Please install 'figlet' and 'lolcat' for better text formatting."
fi
echo -e "${BLUE}┌────────────────────────────────────────────────────────────────•${NC}"
echo -e "${BLUE}• List ⤵⤵ •${NC}  ${BLUE}•${NC} Auth - Passwords ${NC}"
echo -e "${BLUE}•────────────────────────────────────────────────────────────────•${NC}"
IFS=$'\n' # Set Internal Field Separator to newline
for password in $passwords; do
echo -e "${BLUE}• ${password}"
done
echo -e "${BLUE}•────────────────────────────────────────────────────────────────•${NC}"
else
echo "No passwords found in the System."
fi
echo -e ""
read -n 1 -s -r -p "  Press any key to return ↩︎"
menu
}
vps_info() {
clear
install_dependencies
DESCRIPTION=$(lsb_release -sd)
CODENAME=$(lsb_release -sc)
KERNEL=$(uname -r)
COUNTRY=$(curl -s "https://ipinfo.io/city")
PUBLIC_IP=$(curl -s https://api.ipify.org)
ORG=$(curl -s "https://ipinfo.io/org")
if command_exists figlet && command_exists lolcat; then
figlet -k RZS | lolcat && figlet -k Hysteria | lolcat
else
echo "Please install 'figlet' and 'lolcat' for better text formatting."
fi
echo -e "$BLUE•──────────────────────────────────────────────•$NC"
echo -e "$BLUE│$NC       •• VPS INFORMATION ••  $NC"
echo -e "$BLUE└──────────────────────────────────────────────┘$NC"
echo -e "$BLUE┌──────────────────────────────────────────────┐$NC"
echo -e "$BLUE│$NC IP Info : $PUBLIC_IP"
echo -e "$BLUE│$NC Country : $COUNTRY"
echo -e "$BLUE│$NC Org     : $ORG"
echo -e "$BLUE│$NC System  : $DESCRIPTION"
echo -e "$BLUE│$NC Codename: $CODENAME"
echo -e "$BLUE│$NC Kernel  : $KERNEL"
echo -e "$BLUE└──────────────────────────────────────────────┘$NC"
echo -e "$BLUE•──────────────────────────────────────────────•$NC"
echo -e ""
read -n 1 -s -r -p "  Press any key to return ↩︎"
menu
}
menu() {
clear
UDP_PORT_HP=$(cat /etc/volt/UDP_PORT_HP)
RmtPORT=36712
if [[ $(systemctl is-active hysteria) == 'active' ]]; then
state_hysteria="\e[1m\e[32m[ON]"
else
state_hysteria="\e[1m\e[31m[OFF]"
fi
figlet -k Rzs VPN | lolcat
echo -e "$BLUE┌────────────────────────────────────────────────────────────────•${NC}"
echo -e "$BLUE│$NC ${ORANGE}•${NC} Version: ${BLUE}Retri AIO 1.4 ${NC}      ${BLUE}•${NC} IPinfo: $(curl -sS ipv4.icanhazip.com)"
echo -e "$BLUE│$NC ${ORANGE}•${NC} TG-Channel: ${BLUE}@VnzVPN${NC}   ${BLUE}•${NC} Domain: $(cat /etc/volt/DOMAIN)"
echo -e "$BLUE│$NC ${ORANGE}•${NC} DevChat: ${BLUE}@VnzVM${NC}      ${BLUE}•${NC} UPTime: $(uptime -p | sed 's/up //')"
echo -e "$BLUE└────────────────────────────────────────────────────────────────•${NC}"
echo -e "$BLUE┌────────────────────────────────────────────────────────────────•$NC"
echo -e "$BLUE│$NC  Protocol : [$(cat /etc/volt/PROTOCOL)]    ${BLUE}•${NC} Hopping Port : ${UDP_PORT_HP} $NC"
echo -e "$BLUE└────────────────────────────────────────────────────────────────•$NC"
echo -e "$BLUE┌────────────────────────────────────────────────────────────────•$NC"
echo -e "$BLUE• Default Values ⤵⤵ •$NC   ${BLUE}•${NC} Hysteria: $state_hysteria ${NC}"
echo -e "$BLUE•────────────────────────────────────────────────────────────────•$NC"
echo -e "$BLUE│$NC ${CYAN}[Obfs]${NC} ${ORANGE}•${NC} ${WHITE}$(cat /etc/volt/OBFS)${NC}"
echo -e "$BLUE│$NC ${CYAN}[Auth-Passwords]${NC} ${ORANGE}•${NC} ${WHITE}$(cat /etc/volt/PASSWORD)${NC}"
echo -e "$BLUE│$NC ${CYAN}[Allow Insecure]${NC} ${ORANGE}•${NC} ${GREEN}[ON]${NC}"
echo -e "$BLUE└────────────────────────────────────────────────────────────────•$NC"
echo -e "$BLUE•────────────────────────────────────────────────────────────────┐$NC"
echo -e " ${BLUE}[01]${NC} ${ORANGE}•${NC} ${WHITE}Create AUTH Passwords${NC}    $BLUE│$NC ${BLUE}[02]${NC} ${ORANGE}•${NC} ${WHITE}List Auth Passwords${NC}"
echo -e " ${BLUE}[03]${NC} ${ORANGE}•${NC} ${WHITE}Restart Hysteria Service${NC} $BLUE│$NC ${BLUE}[04]${NC} ${ORANGE}•${NC} ${WHITE}System Info${NC}"
echo -e "$BLUE•────────────────────────────────────────────────────────────────┘${NC}"
echo -e "$BLUE┌─────────────────────────┐${NC}"
echo -e "$BLUE│$NC ${BLUE}[99]${NC} ${ORANGE}•${NC} ${WHITE}Reboot Server${NC}"
echo -e "$BLUE│$NC ${BLUE}[00]${NC} ${ORANGE}•${NC} ${RED}Exit${NC}$NC"
echo -e "$BLUE└─────────────────────────┘${NC}"
echo -e ""
echo -ne " Select menu : "
read opt
case $opt in
01 | 1)
new_auth
;;
02 | 2)
list_auth
;;
03 | 3)
restart_services
;;
04 | 4)
vps_info
;;
99 | 9)
clear
reboot
;;
00 | 0)
exit
menu
;;
*)
clear
menu
;;
esac
}
while [[ $? -eq 0 ]]; do
menu
done